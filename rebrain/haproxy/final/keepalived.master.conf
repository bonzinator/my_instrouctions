global_defs {
    notification_email {
        Aleksandr_Krylov@rgs.ru
        smtp_connect_timeout 30
        enable_traps
    }
}
vrrp_script haproxy {
    script "killall -0 haproxy"
    interval 2
    weight 2
}


vrrp_instance VRRP1 {
    state BACKUP
    interface eth0
    virtual_router_id 69
    priority 50
    advert_int 1
    garp_master_delay 10
    debug 1
    authentication {
        auth_type PASS
        auth_pass 1066
    }
    unicast_src_ip 10.128.0.13
    unicast_peer {
        10.128.0.18
    }
    virtual_ipaddress {
        158.160.112.108/24 brd 158.160.112.255 scope global label eth0:10
    }
    track_script {
        haproxy
    }
}





global_defs {
script_user root
enable_script_security
}
#Script used to check if HAProxy is running
vrrp_script check_haproxy {
script "/usr/bin/killall -0 haproxy"
interval 2
weight 2
}
# Virtual interface
# The priority specifies the order in which the assigned interface to take over in a failover
vrrp_instance VI_01 {
state BACKUP # MASTER для основного сервера, BACKUP для резервного
interface eth0 # Имя интерфейса можно узнать с помощью команды ifconfig
virtual_router_id 51
priority 100 # Для основного сервера с haproxy 101, для резервного 100
# Интервал проверки работоспособности в секундах
        advert_int 1
##        authentication {
##              auth_type PASS
##              auth_pass 12345
##        }
# Исходный IP-адрес, используемый для отправки одноадресных пакетов VRRP,
# текущий активный реальный IP-адрес
        unicast_src_ip 10.13.200.170 # Private IP address of master
# IP-адрес однорангового узла, получающего одноадресные пакеты VRRP,
# чтобы восходящий коммутатором не мог прекратить вещание.
        unicast_peer {
        10.13.200.169           # Private IP address of the backup haproxy
#   }
# The virtual ip address shared between the two loadbalancers
virtual_ipaddress {
# Виртуальный IP, по которому будет доступен keepalived
10.13.200.77/24 brd 10.13.200.255 scope global
}
track_script {
haproxy
}
}
