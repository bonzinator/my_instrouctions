version: '3.8'
services:

  # es01:
  #   image: registry.directum.ru/public/elasticsearch:7.16.1
  #   container_name: es01
  #   environment:
  #     - node.name=es01
  #     - cluster.name=es-docker-cluster
  #     - discovery.seed_hosts=es01
  #     - cluster.initial_master_nodes=es01
  #     - bootstrap.memory_lock=true
  #     - "ES_JAVA_OPTS=-Xms16g -Xmx16g"
  #   ulimits:
  #     nofile:
  #       soft: 65536
  #       hard: 65536
  #     memlock:
  #       soft: -1
  #       hard: -1
  #   volumes:
  #     - /data/el:/usr/share/elasticsearch/data
  #   ports:
  #     - 9200:9200
  #   networks:
  #     - network
  #   restart: always

  # kibana:
  #   image: registry.directum.ru/public/kibana:7.16.1
  #   container_name: kib01
  #   ports:
  #     - "5601:5601"
  #   environment:
  #     ELASTICSEARCH_URL: http://es01:9200
  #     ELASTICSEARCH_HOSTS: http://es01:9200
  #   depends_on:
  #     - es01
  #   networks:
  #     - network
  #   restart: always

  # logstash:
  #   image: registry.directum.ru/public/logstash:7.16.1
  #   container_name: log01
  #   ports:
  #     - "5044:5044"
  #     - "9600:9600"
  #   environment:
  #     LS_JAVA_OPTS: "-Xms5g -Xmx5g"
  #     XPACK_SECURITY_ENABLED: "false"
  #     XPACK_REPORTING_ENABLED: "false"
  #     XPACK_MONITORING_ENABLED: "false"
  #     ELASTIC_HOST: "es01:9200"
  #     LS_NODE_NAME: "log01:5044"
  #   command:
  #     logstash -f /etc/logstash/conf.d/logstash.conf
  #   volumes:
  #     - ./LogStash/Conf/logstash.conf:/etc/logstash/conf.d/logstash.conf
  #     - ./LogStash:/etc/logstash/parsers
  #     - ./LogStash/Conf/logstash.yml:/etc/logstash/logstash.yml
  #     - ./LogStash/templates/rxlog.json:/etc/logstash/rxlog.json
  #     - ./LogStash/templates/rx_healthcheck.json:/etc/logstash/rx_healthcheck.json
  #   networks:
  #     - network
  #   restart: always

  grafana:
    container_name: grafana
    image: grafana/grafana-oss:11.4.0-ubuntu
    ports:
      - "3000:3000" # To use port 80 use this parameter setting: "80:3000"
    environment:
     # GF_DASHBOARDS_DEFAULT_HOME_DASHBOARD_PATH: "/etc/provisioning/dashboards/General/Homepage.json" # Set home dashboard
      GF_AUTH_ANONYMOUS_ENABLED: "false"
      GF_USERS_VIEWERS_CAN_EDIT: "true"
      GF_DEFAULT_FORCE_MIGRATION: "true"
      GF_ALERTING_ENABLED: "false"
      GF_UNIFIED_ALERTING_ENABLED: "true" # Disabled unified alerts (new in version 9) and enable old alerts
      GF_UNIFIED_ALERTING_SCREENSHOTS_CAPTURE: "true"
      GF_SERVER_ROOT_URL: "http://localhost:3000/" # This is the full URL used to access Grafana from a web browser and in your alert notifications
      GF_RENDERING_SERVER_URL: "http://grafana_renderer:8081/render" # Grafana Image render plugin settings
      GF_RENDERING_CALLBACK_URL: "http://grafana:3000/" # Grafana Image render plugin settings
      GF_LOG_FILTERS: "rendering:debug" # Grafana Image render plugin settings

      # SMTP settigs for Grafana email notification
      # GF_IGNORE_HTTPS_ERRORS: "true"
      # GF_SMTP_ENABLED: "false"
      # GF_SMTP_HOST: "mail.example.ru:500"
      # GF_SMTP_USER: "mailuser@example.ru"
      # GF_SMTP_PASSWORD: "password"
      # GF_SMTP_FROM_ADDRESS: "mail@example.ru"
      # GF_SMTP_FROM_NAME: "Grafana"
      # GF_SMTP_EHLO_IDENTITY:
    volumes:
      - grafana_data:/var/lib/grafana
      # Uncomment the lines to use the local zabbix plugin (without internet)
      #- ./Grafana/grafanaplug/zabbix/dist:/var/lib/grafana/plugins/zabbix
    networks:
      - network
    restart: always
  # Grafana image render plugin
  grafana_renderer:
    container_name: grafana_renderer
    image: grafana/grafana-image-renderer:3.11.6
    ports:
      - 8081
    environment:
      ENABLE_METRICS: 'true'
    networks:
      - network
    restart: always

  prometheus:
    image: bitnami/prometheus:3.0.1
    container_name: prometheus
    restart: always
    ports:
      - 9090:9090
    networks:
      - network
    volumes:
      - "./prometheus.yml:/etc/prometheus/prometheus.yml:ro"

volumes:
  grafana_data:
networks:
  network: